package Perl::Dist::WiX::Files::Component;

=pod

=head1 NAME

Perl::Dist::WiX::Files::Component - Class for a <Component> tag that contains file(s).

=head1 DESCRIPTION

This is a subclass of L<Perl::Dist::WiX::Base::Component|Perl::Dist::WiX::Base::Component> 
that contains L<Perl::Dist::WiX::Files::Entry|Perl::Dist::WiX::Files::Entry> 
classes (<File> tags.)

=head1 METHODS

=head2 Accessors

Accessors take no parameters and return the item requested (listed below)

=cut


use 5.006;
use strict;
use warnings;
use Carp            qw{ croak               };
use Params::Util    qw{ _IDENTIFIER _STRING };
use Data::UUID      qw{ NameSpace_DNS       };
use Perl::Dist::WiX::Base::Component
                    qw{                     };
use Perl::Dist::WiX::Files::Entry
                    qw{                     };
                    

use vars qw{$VERSION @ISA};
BEGIN {
    $VERSION = '0.11_06';
    @ISA = 'Perl::Dist::WiX::Base::Component';
}

=pod

=over 4

=item filename

Returns the C<filename> parameter passed in by L</new>

=back

    $filename = $component->filename; 

=cut

use Object::Tiny qw{
    filename
    fragment_id
};

#####################################################################
# Constructors for Files::Component


=head2 new(...)

The B<new> method creates a new component object, and the entry it contains.

    $self = Perl::Dist::WiX::Files::Component->new(
        filename => $filename,
        sitename => $sitename,
    );
    
The C<id> and C<guid> parameters to the L<Perl::Dist::WiX::Base::Component"new (...)"|subclass> 
are automatically generated by this class.

For parameters not listed here, see the L<Perl::Dist::WiX::Base::Component/"new (...)"|subclass>

=head2 Parameters

=over 4

=item filename

See L<Perl::Dist::WiX::Files::Entry/"new (...)"|Perl::Dist::WiX::Files::Entry>.

=back

=cut

sub new {
    my $self = shift->SUPER::new(@_);

    unless ( _STRING($self->filename) ) {
        croak("Missing or invalid filename param");
    }
    
    unless ( _STRING($self->sitename) ) {
        croak("Missing or invalid sitename param - cannot generate GUID without one");
    }

    unless ( defined $self->guid ) {
        my $guidgen = Data::UUID->new();
        # Make our own namespace...
        my $uuid =  $guidgen->create_from_name(Data::UUID::NameSpace_DNS, $self->sitename);
        #... then use it to create a GUID out of the filename.
        $self->{guid} = uc $guidgen->create_from_name_str($uuid, $self->filename);
        $self->{id} = $self->{guid}; 
        $self->{id} =~ s{-}{_}g;
    }

    $self->{entries}->[0] = new Perl::Dist::WiX::Files::Entry(
        sitename => $self->sitename,
        name     => $self->filename,
    );
    
    return $self;
}


#####################################################################
# Main Methods



sub get_component_array {
    my $self = shift;

    my $count = scalar @{$self->{components}};

    return "C_$self->{id}";    
}

=head2 as_string()

The B<as_string> method converts the entry tags within this object  
into strings by calling their own L<Perl::Dist::WiX::Base::Entry|as_string>
methods and indenting them, and then surrounding them by a <Component> tag.

    $string = $self->as_string;

=cut

sub as_string {
    my $self = shift;
    
    return q{} if (0 == scalar @{$self->{entries}}); 
        
    my $answer = <<END_OF_XML;
<Component Id='C_$self->{id}' Guid='$self->{guid}'>
END_OF_XML
   
    $answer .= $self->SUPER::as_string(2);
    
    $answer .= <<END_OF_XML;
</Component>
END_OF_XML
    
    return $answer;
}

1;

=head1 SUPPORT

No support of any kind is provided for this module

=head1 AUTHOR

Curtis Jewell E<lt>csjewell@cpan.orgE<gt>

=head1 SEE ALSO

L<Perl::Dist|Perl::Dist>, L<Perl::Dist::WiX|Perl::Dist::WiX>

=head1 COPYRIGHT

Copyright 2009 Curtis Jewell.

This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.

=cut
