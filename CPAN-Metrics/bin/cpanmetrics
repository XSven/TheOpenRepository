#!/usr/bin/perl

=pod

=head1 NAME

cpanmetrics - Generation of CPAN metrics using some default settings

=head1 SYNOPSIS

  > cpanmetrics
  (various output for several hours)

=head1 DESCRIPTION

C<cpanmetrics> is the script version of the L<CPAN::Metrics> module,
downloading a L<minicpan> mirror, expanding out the default set of Perl
files from the archives, and processing the metrics data for all
installed L<Perl::Metrics> plugins.

=head2 Settings Used

The minicpan mirror will be checked out underneath a C<.minicpan>
directory, created in your home directory.

The archives will be extracted underneath a C<.cpanmetrics> directory,
create in your home directory, with the root directory for each
archive located at the same name as the relevant archive in the
C<.minicpan> directory.

And finally, the metrics SQLite database will be created at
C<.cpanmetrics/metrics.sqlite>.

=cut

use strict;
use File::Spec    ();
use File::HomeDir ();
use Getopt::Long  ();
use CPAN::Metrics ();

use vars qw{$VERSION};
BEGIN {
	$VERSION = '0.04';
}





#####################################################################
# Check the directories

my $mirror    = 'http://mirrors.kernel.org/cpan/';
my $homedir   = File::HomeDir::home()
	or die "Failed to locate your home directory";
my $minicpan  = File::Spec->catdir( $homedir, '.minicpan'         );
my $extracted = File::Spec->catdir( $homedir, '.cpanmetrics'      );
my $metrics   = File::Spec->catfile( $extracted, 'metrics.sqlite' );

# Get some command line flags
my $QUIET         = 0;
my $OFFLINE       = 0;
my $EXTRACT_FORCE = 0;
Getopt::Long::GetOptions(
	'help'          => sub { help()    },
	'version'       => sub { version() },
	'quiet'         => \$QUIET,
	'offline'       => \$OFFLINE,
	'extract_force' => \$EXTRACT_FORCE,
	);





#####################################################################
# Create and execute the CPAN::Metrics object

message("Creating CPAN::Metrics object...\n");
my $metrics = CPAN::Metrics->new(
	trace          => ! $QUIET,
	offline        => $OFFLINE,
	remote         => $mirror,
	local          => $minicpan,
	extract        => $extracted,
        extract_filter => sub { /\.pm$/ and ! /\b(inc|t)\b/ },
	extract_check  => 1,
	extract_force  => $EXTRACT_FORCE,
	metrics        => $metrics,
	);
message("Launching CPAN::Metrics process...\n");
$metrics->run;

exit(0);

sub message {
	return if $QUIET;
	print $_[0];
}

sub version {
	print "cpanmetrics $VERSION\n";
	exit(0);
}

sub help {
	print <<"END_HELP";
This is cpanmetrics $VERSION, the CPAN::Metrics command line launcher

Usage:
  cpanmetrics [OPTIONS]

Options:
  --quiet         run quietly, with all tracing disabled
  --offline       run in offline mode (not fully supported yet)
  --extract_force remove ALL extracted files and re-extract
  --help          show this help, then exit
  --version       output version information, then exit
END_HELP
	exit(0);
}
